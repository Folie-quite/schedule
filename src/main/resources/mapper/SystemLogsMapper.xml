<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shang.schedule.mapper.SystemLogsMapper" >
  <resultMap id="BaseResultMap" type="com.shang.schedule.pojo.SystemLogs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="states" property="states" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.shang.schedule.pojo.SystemLogs" extends="BaseResultMap" >
    <result column="device_details" property="deviceDetails" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_user, create_date, details, method, states, time, ip, url
  </sql>
  <sql id="Blob_Column_List" >
    device_details
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.shang.schedule.pojo.SystemLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shang.schedule.pojo.SystemLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_logs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shang.schedule.pojo.SystemLogsExample" >
    delete from system_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shang.schedule.pojo.SystemLogs" >
    insert into system_logs (id, create_user, create_date, 
      details, method, states, 
      time, ip, url, device_details
      )
    values (#{id,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{details,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{states,jdbcType=INTEGER}, 
      #{time,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{deviceDetails,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shang.schedule.pojo.SystemLogs" >
    insert into system_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="details != null" >
        details,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="states != null" >
        states,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="deviceDetails != null" >
        device_details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        #{states,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="deviceDetails != null" >
        #{deviceDetails,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shang.schedule.pojo.SystemLogsExample" resultType="java.lang.Integer" >
    select count(*) from system_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update system_logs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.details != null" >
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.states != null" >
        states = #{record.states,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceDetails != null" >
        device_details = #{record.deviceDetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update system_logs
    set id = #{record.id,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      details = #{record.details,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      states = #{record.states,jdbcType=INTEGER},
      time = #{record.time,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      device_details = #{record.deviceDetails,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update system_logs
    set id = #{record.id,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      details = #{record.details,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      states = #{record.states,jdbcType=INTEGER},
      time = #{record.time,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shang.schedule.pojo.SystemLogs" >
    update system_logs
    <set >
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="deviceDetails != null" >
        device_details = #{deviceDetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shang.schedule.pojo.SystemLogs" >
    update system_logs
    set create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      details = #{details,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      states = #{states,jdbcType=INTEGER},
      time = #{time,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      device_details = #{deviceDetails,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shang.schedule.pojo.SystemLogs" >
    update system_logs
    set create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      details = #{details,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      states = #{states,jdbcType=INTEGER},
      time = #{time,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>